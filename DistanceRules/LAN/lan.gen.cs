//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Distance.Diagnostics.Lan {
    using Distance.Runtime;
    using Distance.Utils;
    using System;
    
    
    public class IpPacket {
        
        private Int32 _FrameNumber;
        
        private String _EthSrc;
        
        private String _EthDst;
        
        private String _IpSrc;
        
        private String _IpDst;
        
        public static string Filter = "ip";
        
        public static string[] Fields = new string[] {
                "frame.number",
                "eth.src",
                "eth.dst",
                "ip.src",
                "ip.dst"};
        
        [FieldName("frame.number")]
        public virtual Int32 FrameNumber {
            get {
                return this._FrameNumber;
            }
            set {
                this._FrameNumber = value;
            }
        }
        
        [FieldName("eth.src")]
        public virtual String EthSrc {
            get {
                return this._EthSrc;
            }
            set {
                this._EthSrc = value;
            }
        }
        
        [FieldName("eth.dst")]
        public virtual String EthDst {
            get {
                return this._EthDst;
            }
            set {
                this._EthDst = value;
            }
        }
        
        [FieldName("ip.src")]
        public virtual String IpSrc {
            get {
                return this._IpSrc;
            }
            set {
                this._IpSrc = value;
            }
        }
        
        [FieldName("ip.dst")]
        public virtual String IpDst {
            get {
                return this._IpDst;
            }
            set {
                this._IpDst = value;
            }
        }
        
        public override string ToString() {
            return string.Format("IpPacket: frame.number={0} eth.src={1} eth.dst={2} ip.src={3} ip.dst={4}", this.FrameNumber, this.EthSrc, this.EthDst, this.IpSrc, this.IpDst);
        }
        
        public override int GetHashCode() {
            return Distance.Utils.HashFunction.GetHashCode(this.FrameNumber, this.EthSrc, this.EthDst, this.IpSrc, this.IpDst);
        }
        
        public override bool Equals(object obj) {
            IpPacket that = obj as IpPacket;
            return ((((((that != null) 
                        && object.Equals(this.FrameNumber, that.FrameNumber)) 
                        && object.Equals(this.EthSrc, that.EthSrc)) 
                        && object.Equals(this.EthDst, that.EthDst)) 
                        && object.Equals(this.IpSrc, that.IpSrc)) 
                        && object.Equals(this.IpDst, that.IpDst));
        }
        
        public static IpPacket Create(string[] values) {
            IpPacket newObj = new IpPacket();
            newObj._FrameNumber = values[0].ToInt32();
            newObj._EthSrc = values[1].ToString();
            newObj._EthDst = values[2].ToString();
            newObj._IpSrc = values[3].ToString();
            newObj._IpDst = values[4].ToString();
            return newObj;
        }
    }
    
    public class DuplicateAddressDetected {
        
        private String _Ip;
        
        private String _Eth1;
        
        private String _Eth2;
        
        [FieldName("ip")]
        public virtual String Ip {
            get {
                return this._Ip;
            }
            set {
                this._Ip = value;
            }
        }
        
        [FieldName("eth1")]
        public virtual String Eth1 {
            get {
                return this._Eth1;
            }
            set {
                this._Eth1 = value;
            }
        }
        
        [FieldName("eth2")]
        public virtual String Eth2 {
            get {
                return this._Eth2;
            }
            set {
                this._Eth2 = value;
            }
        }
        
        public override string ToString() {
            return string.Format("DuplicateAddressDetected: ip={0} eth1={1} eth2={2}", this.Ip, this.Eth1, this.Eth2);
        }
        
        public override int GetHashCode() {
            return Distance.Utils.HashFunction.GetHashCode(this.Ip, this.Eth1, this.Eth2);
        }
        
        public override bool Equals(object obj) {
            DuplicateAddressDetected that = obj as DuplicateAddressDetected;
            return ((((that != null) 
                        && object.Equals(this.Ip, that.Ip)) 
                        && object.Equals(this.Eth1, that.Eth1)) 
                        && object.Equals(this.Eth2, that.Eth2));
        }
    }
}
